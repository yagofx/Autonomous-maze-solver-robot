#include <SimpleKalmanFilter.h>

SimpleKalmanFilter front_estimation(0.5, 0.5, 0.01);
SimpleKalmanFilter left_estimation(0.5, 0.5, 0.01);
SimpleKalmanFilter right_estimation(0.5, 0.5, 0.01);

//echo && trig//
int echo_p[] = {2, 9, 10}; //echo: front, left, right
int trig_p[] = {5, 8, 11}; //trig: front, left, right

//distances//
float dist[3];   //ditance: front, left, right
float t[3];
float d[3];
float d2[3];

//Walls//
int f_w;  //1 = paret , 0 = es pot avançar 
int l_w; //1 = paret , 0 = es pot avançar 
int r_w; //1 = paret , 0 = es pot avançar 

//Motors//
int left_f = 7;
int right_f = 13;

int left_b = 8;
int right_b = 12;

//Front distance//
float front_d(){
  digitalWrite(trig_p[0], LOW);
  delayMicroseconds(2);
  digitalWrite(trig_p[0], HIGH);
  delayMicroseconds(10);
  digitalWrite(trig_p[0], LOW);

  t[0] = pulseIn(echo_p[0], HIGH);

  d[0] = t[0] / 58.27505;
  d2[0] = front_estimation.updateEstimate(d[0]);
  
  return d2[0];
}

float left_d(){
  digitalWrite(trig_p[1], LOW);
  delayMicroseconds(2);
  digitalWrite(trig_p[1], HIGH);
  delayMicroseconds(10);
  digitalWrite(trig_p[1], LOW);

  t[1] = pulseIn(echo_p[1], HIGH);

  d[1] = t[1] / 58.27505;
  d2[1] = left_estimation.updateEstimate(d[1]);  

  return d2[1];
  }

float right_d(){
  digitalWrite(trig_p[2], LOW);
  delayMicroseconds(2);
  digitalWrite(trig_p[2], HIGH);
  delayMicroseconds(10);
  digitalWrite(trig_p[2], LOW);

  t[2] = pulseIn(echo_p[2], HIGH);

  d[2] = t[2] / 58.27505;
  d2[2] = right_estimation.updateEstimate(d[2]);  

  return d2[2];
  }

void forward(){
  digitalWrite(left_f, HIGH);
  digitalWrite(right_f, HIGH);
  }

void left(){
  digitalWrite(left_b, HIGH);
  digitalWrite(right_f, HIGH);
  }

void right(){
  digitalWrite(left_f, HIGH);
  digitalWrite(right_b, HIGH);
  }


void setup() {
  
  Serial.begin(9600); 
  pinMode(trig_p[0], OUTPUT);
  pinMode(trig_p[1], OUTPUT);
  pinMode(trig_p[2], OUTPUT);
  pinMode(echo_p[0], INPUT);
  pinMode(echo_p[1], INPUT);
  pinMode(echo_p[2], INPUT);
  pinMode(left_f, OUTPUT);
  pinMode(left_b, OUTPUT);
  pinMode(right_f, OUTPUT);
  pinMode(right_b, OUTPUT);
  Serial.begin(115200);
}

void loop() {

  dist[0] = front_d();
  dist[1] = left_d();
  dist[2] = right_d();

  Serial.print(dist[0]);
  Serial.print(", ");
  Serial.print(dist[1]);
  Serial.print(", ");
  Serial.println(dist[2]);

}




